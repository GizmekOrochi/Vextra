#pragma once
#include <string_view>

/**
 * @file Config.hpp
 * @brief Global constants and configuration for the Vextra CLI framework.
 *
 * This header centralizes all application-wide settings, constants,
 * and default template values used throughout the Vextra project.
 *
 * ## Purpose
 * - Define metadata such as app name and version.
 * - Store the default directory structure for generated projects.
 * - Provide visual icons for standardized terminal output.
 * - Ensure consistent values across all commands.
 *
 * ## Design philosophy
 * This file acts as a single source of truth for configuration.
 * No hardcoded values should appear directly in command implementations.
 *
 * Example:
 * ```cpp
 * std::cout << vextra::ICON_SUCCESS << " Project created.\n";
 * std::filesystem::create_directories(vextra::SRC_DIR);
 * ```
 */
namespace vextra {

// Application metadata
inline constexpr std::string_view APP_NAME = "vextra";      ///< CLI executable name
inline constexpr std::string_view APP_VERSION = "0.1.0";    ///< Current version of the tool

// Default project values
inline constexpr std::string_view DEFAULT_LANGUAGE = "none"; ///< Default language flag if none specified
inline constexpr std::string_view DEFAULT_README = "# {project}\nGenerated by Vextra CLI.\n"; ///< Default README.md content
inline constexpr std::string_view DEFAULT_GITIGNORE = "/bin/\n*.o\n*.exe\n"; ///< Default .gitignore content

// Icons & styling (for terminal output)
inline constexpr std::string_view ICON_SUCCESS = "✅"; ///< Icon used for success messages
inline constexpr std::string_view ICON_ERROR   = "❌"; ///< Icon used for error messages
inline constexpr std::string_view ICON_WARNING = "⚠️"; ///< Icon used for warnings

// Default structure directories
inline constexpr std::string_view SRC_DIR = "src";           ///< Main source directory
inline constexpr std::string_view INCLUDE_DIR = "src/include"; ///< Header files directory
inline constexpr std::string_view CORE_DIR = "src/core";       ///< Core source files directory
inline constexpr std::string_view RESOURCE_DIR = "resource";   ///< Assets directory (images, audio, etc.)
inline constexpr std::string_view BIN_DIR = "bin";             ///< Compiled binaries directory
inline constexpr std::string_view DOC_DIR = "doc";             ///< Documentation output directory
inline constexpr std::string_view TESTS_DIR = "tests";         ///< Unit tests directory
inline constexpr std::string_view LIBS_DIR = "libs";           ///< External libraries directory

} // namespace vextra
